<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>WhereTo | Jeepney Route Finder</title>
  <link rel="icon" href="/WTFavicon.png" type="image/png">
  <link rel="stylesheet" href="destination.css" />
  <link rel="stylesheet" href="alerts.css" />
  <style>
    #recentSearchesContainer {
      max-height: 180px;
      overflow-y: auto;
    }

    .floating-notifications {
      position: fixed;
      right: 20px;
      bottom: 20px;
      width: 320px;
      max-width: calc(100% - 40px);
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.15);
      z-index: 9999;
      font-family: Poppins, Arial, sans-serif;
    }
    .fn-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 10px 12px;
      border-bottom: 1px solid rgba(0,0,0,0.06);
    }
    .fn-title { font-weight: 600; color: #ff0000; }
    .fn-toggle {
      background: transparent;
      border: none;
      font-size: 20px;
      cursor: pointer;
      color: #0a3d62;
      padding: 4px 8px;
      border-radius: 8px;
    }
    .fn-toggle:hover { background: rgba(10,61,98,0.08); }
    .fn-list { list-style: none; margin: 0; padding: 8px 8px 10px 8px; max-height: 260px; overflow: auto; }
    .fn-item {
      display: flex;
      gap: 10px;
      align-items: flex-start;
      padding: 10px;
      border-radius: 10px;
      background: #f8fbff;
      border: 1px solid #e6f0f7;
      margin: 6px 0;
    }
    .fn-item .fn-icon { width: 16px; height: 16px; margin-top: 2px; }
    .fn-item .fn-text { font-size: 12px; color: #244; line-height: 1.3; }
    .fn-hidden .fn-list,
    .fn-hidden .report-status-section { display: none; }

    .report-status-section {
      border-bottom: 1px solid #e0e0e0;
      background: #fffef7;
      padding: 8px 12px 10px 12px;
    }
    .report-status-title {
      font-size: 13px;
      font-weight: 600;
      color: #0a3d62;
      margin-bottom: 6px;
    }
    .report-status-list {
      list-style: none;
      margin: 0;
      padding: 0;
      max-height: 90px;
      overflow-y: auto;
    }
    .report-status-item {
      font-size: 12px;
      padding: 6px 8px;
      border-radius: 6px;
      margin-bottom: 4px;
      display: flex;
      align-items: center;
      gap: 6px;
      background: #ffffff;
      box-shadow: 0 1px 4px rgba(0, 0, 0, 0.06);
    }
    .report-status-item.pending { border-left: 4px solid #ffb300; }
    .report-status-item.verified { border-left: 4px solid #4caf50; }
    .report-status-item.rejected { border-left: 4px solid #f44336; }
  </style>
</head>
<body>
  <header>
    <div class="header-left">
      <img src="compass.PNG" alt="Compass" class="icon logo-icon" />
      <img src="Logo.PNG" alt="WhereTo Logo" class="logo" />
    </div>

    <div class="header-right">
      <div class="nav-icon" title="Live Map">
        <img src="map.png" alt="Live Map" onclick="window.location.href='/LiveMap'" />
      </div>
      <div class="nav-icon" title="Report Issue">
        <img src="report.png" alt="Report" onclick="window.location.href='/report'" />
      </div>
      <div class="nav-icon" title="Notifications">
        <img src="notification.png" alt="Notifications" onclick="window.location.href='/notification'" />
      </div>
      <div class="nav-icon" title="Profile">
        <img src="profile.png" alt="Profile" onclick="window.location.href='/profile'" />
      </div>
    </div>
  </header>

  <section class="hero">
    <div class="overlay">
      <h2>Plan your trip</h2>
      <div class="trip-form">
        <div class="input-group">
          <label for="from">From</label>
          <input type="text" id="from" placeholder="Enter starting point">
        </div>
        <div class="input-group">
          <label for="to">To</label>
          <input type="text" id="to" placeholder="Enter destination">
        </div>
        <button id="searchBtn" class="search-btn">Search Routes</button>
      </div>
    </div>
  </section>

  <div class="buttons-row">
    <button class="info-btn" onclick="window.location.href='/LiveMap'">
      <img src="map.png" alt="Routes" />
      <span>Live Map</span>
    </button>

    <button class="info-btn" onclick="window.location.href='/report'">
      <img src="report.png" alt="Report" />
      <span>Report Issue</span>
    </button>
  </div>

  <div class="big-box">
    <h1>Recent Searches</h1>
    <div id="recentSearchesContainer"></div>
  </div>

  <div id="floatingNotifications" class="floating-notifications" aria-live="polite">
    <div class="fn-header">
      <span class="fn-title">Alerts</span>
      <button id="fnToggle" class="fn-toggle" aria-label="Minimize">–</button>
    </div>
    <div id="reportStatusSection" class="report-status-section">
      <h4 class="report-status-title">Your Report Updates</h4>
      <ul id="reportStatusList" class="report-status-list"></ul>
    </div>
    <ul id="fnList" class="fn-list"></ul>
  </div>

  <script>
    // ===== FLOATING ALERTS =====
    (function() {
      const NT_KEY = 'notificationsList';
      const defaultNotifications = [
        { id: 1, title: 'Service Delay', desc: 'Heavy traffic reported near Main Ave.' },
        { id: 2, title: 'Route Change', desc: 'Jeepney route 101 has a temporary detour.' }
      ];
      if (!localStorage.getItem(NT_KEY)) localStorage.setItem(NT_KEY, JSON.stringify(defaultNotifications));
      const list = JSON.parse(localStorage.getItem(NT_KEY) || '[]');
      const fn = document.getElementById('floatingNotifications');
      const ul = document.getElementById('fnList');
      const toggle = document.getElementById('fnToggle');

      function render() {
        ul.innerHTML = '';
        list.slice(0,5).forEach(item => {
          const li = document.createElement('li');
          li.className = 'fn-item';
          li.innerHTML = '<img src="notification.png" alt="" class="fn-icon" aria-hidden="true">' +
                         '<div class="fn-text"><strong>' + (item.title || 'Alert') + ':</strong> ' +
                         (item.desc || '') + '</div>';
          ul.appendChild(li);
        });
      }

      toggle.addEventListener('click', function() {
        fn.classList.toggle('fn-hidden');
        toggle.textContent = fn.classList.contains('fn-hidden') ? '+' : '–';
        toggle.setAttribute('aria-label', fn.classList.contains('fn-hidden') ? 'Expand' : 'Minimize');
      });

      render();
    })();
  </script>

  <script>
    // ===== REPORT STATUS DATA =====
    const REPORTS_KEY = "userReportsStatus";
    const defaultReports = [
      { id: 1, status: "pending", text: "Your report about 'Broken signage' is pending." },
      { id: 2, status: "verified", text: "Your report 'Wrong jeepney route' was verified." },
      { id: 3, status: "rejected", text: "Your report 'Traffic near Main Ave.' was rejected." }
    ];
    localStorage.setItem(REPORTS_KEY, JSON.stringify(defaultReports));
    const reportList = JSON.parse(localStorage.getItem(REPORTS_KEY) || "[]");
    const reportContainer = document.getElementById("reportStatusList");

    function renderReportStatuses() {
      reportContainer.innerHTML = "";
      reportList.forEach((report) => {
        const li = document.createElement("li");
        li.className = `report-status-item ${report.status}`;
        li.textContent = report.text;
        reportContainer.appendChild(li);
      });
    }
    renderReportStatuses();
  </script>

  <script>
    // ===== RECENT SEARCHES + SERVER RECORDING =====
    const fromInput = document.getElementById('from');
    const toInput = document.getElementById('to');
    const searchBtn = document.getElementById('searchBtn');
    const recentSearchesContainer = document.getElementById('recentSearchesContainer');

    const RECENT_SEARCHES_KEY = 'recentSearches';
    const MAX_RECENT_SEARCHES = 10;

    function getRecentSearches() {
      try { return JSON.parse(localStorage.getItem(RECENT_SEARCHES_KEY)) || []; } catch(e){ return []; }
    }

    function saveRecentSearches(searches) {
      try { localStorage.setItem(RECENT_SEARCHES_KEY, JSON.stringify(searches)); } catch(e){}
    }

    function addRecentSearch(from, to) {
      const searches = getRecentSearches();
      const filtered = searches.filter(s => !(s.from===from && s.to===to));
      filtered.unshift({from,to});
      const limited = filtered.slice(0, MAX_RECENT_SEARCHES);
      saveRecentSearches(limited);
      renderRecentSearches();
    }

    function renderRecentSearches() {
      const searches = getRecentSearches();
      recentSearchesContainer.innerHTML = '';
      searches.forEach((search,index)=>{
        const div = document.createElement('div');
        div.className='small-box recent-search';
        div.innerHTML=`<img src="route.png" alt="Jeep Left" class="small-icon left">
          <span>Route ${index+1}: ${search.from} to ${search.to}</span>
          <img src="favorites.png" alt="Jeep Right" class="small-icon right">`;
        div.addEventListener('click',()=> {
          fromInput.value=search.from;
          toInput.value=search.to;
          validateInputs();
        });
        recentSearchesContainer.appendChild(div);
      });
    }

    function validateInputs() {
      const fromValue = fromInput.value.trim();
      const toValue = toInput.value.trim();
      searchBtn.disabled = !(fromValue && toValue);
      searchBtn.style.opacity = searchBtn.disabled ? '0.5' : '1';
    }

    fromInput.addEventListener('input', validateInputs);
    toInput.addEventListener('input', validateInputs);

    searchBtn.addEventListener('click', async function() {
      if (!this.disabled) {
        const fromValue = fromInput.value.trim();
        const toValue = toInput.value.trim();

        // ✅ Step 4: Send search data to backend before redirecting
        try {
          await fetch("/api/search", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ from: fromValue, to: toValue })
          });
          console.log("✅ Search recorded:", fromValue, "→", toValue);
        } catch (err) {
          console.error("❌ Failed to record search:", err);
        }

        addRecentSearch(fromValue, toValue);
        window.location.href = `/route?from=${encodeURIComponent(fromValue)}&to=${encodeURIComponent(toValue)}`;
      }
    });

    validateInputs();
    renderRecentSearches();
  </script>
</body>
</html>
